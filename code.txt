import asyncio

import bleak.exc
from bleak import BleakClient


async def write_to_characteristic(mac_address, characteristic_uuid, data):
    # Connect to the BLE peripheral
    async with BleakClient(mac_address) as client:
        print(f"Connected to {mac_address}")

        # Check if the characteristic is available and writable
        services = await client.get_services()
        for service in services:
            print(f"Service UUID: {service.uuid}")
            for characteristic in service.characteristics:
                print(f"  Characteristic UUID: {characteristic.uuid}")
                print(f"    Properties: {characteristic.properties}")
                if "write" in characteristic.properties:
                    print(f"Write")
                    try:
                        await client.write_gatt_char(characteristic.uuid, b"abc")
                    except bleak.exc.BleakError as e:
                        print(f"Write failed: {e}")

        characteristic = None
        #await client.write_gatt_char(characteristic_uuid, b"abc", response=True)

        # Write data to the characteristic
        await client.write_gatt_char(characteristic_uuid, data)
        print(f"Data written to {characteristic_uuid}")


# Replace with your BLE peripheral's MAC address and characteristic UUID
mac_address = "FF:80:D1:28:14:C3"  # MAC address of the peripheral
characteristic_uuid = "00002a57-0000-1000-8000-00805f9b34fb"  # UUID of the writable characteristic
data = bytearray([0x01])  # Data to be written as bytes

# Run the asynchronous function
asyncio.run(write_to_characteristic(mac_address, characteristic_uuid, data))
